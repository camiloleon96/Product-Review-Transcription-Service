version: "3.8"
services:
  
  db:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U admin
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"

  redis:
    container_name: redis
    image: redis:6.2-alpine
  
  app:
    container_name: fastapi_container
    build: ./src/backend_api
    restart: always
    ports:
      - "8001:80"
    depends_on:
      db:
        condition: service_healthy
  celery_worker:
    container_name: celery_worker
    build: ./src/worker
    command: celery -A celery_worker.celery worker --loglevel=info
    volumes:
      - ./src/worker:/app
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - app
      - redis

  flower:
    container_name: flower
    build: ./src/worker
    command: celery -A celery_worker.celery flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - app
      - redis
      - celery_worker
